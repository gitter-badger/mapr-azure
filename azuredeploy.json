{

	"$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
	"contentVersion": "1.0.0.0",



	"parameters": {
		"location": {
			"type": "string",
			"defaultValue": "West US",
			"allowedValues": [
				"West US",
				"West Europe",
				"East US",
				"East Asia",
				"Southeast Asia"
			],
			"metadata": {
				"Description": "Region where you want to create all the resources"
			}
		},

		"storageAccountName": {
			"type": "string",
			"defaultValue":"mapr-storage",
			"metadata": {
				"Description": "Storage account name pattern.The template will use this value and the resource group name for all the storage accounts."
			}
		},
		"storageAccountType": {
			"type": "string",
			"defaultValue": "Standard_LRS",
			"allowedValues": [
				"Standard_LRS",
				"Premium_LRS"
			],
			"metadata": {
				"Description": "Type of storage account. Standard_LRS or Premium_LRS"
			}
		},
		"numberOfDataDisksPerNode": {
			"type": "int",
			"defaultValue": 6,
			"metadata": {
				"Description": "Number of data disks (For future versions, currently 2 disks will be created)"
			}
		},
		"sizeOfDataDisks": {
			"type": "int",
			"defaultValue": 120,
			"metadata": {
				"Description": "Data disks Size in GBs"
			}
		},
		"clusterName": {
			"type": "string",
			"defaultValue": "my.cluster.com",
			"metadata": {
				"Description": "Name of this cluster. Used for storage an labels."
			}
		},
		"tags": {
			"type": "string",
			"defaultValue": "mapr",
			"metadata": {
				"Description": "A tag will be created with the provided value"
			}
		},
		"numberOfNodes": {
			"type": "int",
			"defaultValue": 3,
			"metadata": {
				"Description": "Number of VMs.The template will create N number of identical VMs"
			}
		},
		"maprPassword": {
			"type": "string",
			"metadata": {
				"Description": "MapR password"
			}
		},
		"sshKeyData": {
			"type": "string",
			"metadata": {
				"Description": "ssh public key for the admin user"
			}
		}
	},


	"variables": {

		"vmSourceImageRef": "[concat('/',subscription().subscriptionId,'/services/images/','mapr-ubuntu-os-2015-04-21')]",

		"bootstrapFile" :"install_mapr.sh",
		"bootstrapUrl": "[concat('https://maprpublic.blob.core.windows.net/install/v1/',variables('bootstrapFile'))]",
		"bootstrapCommand": "[concat('bash ',variables('bootstrapFile'))]",
		"bootstrapParameters": "[concat(
			' -i ',parameters('numberOfNodes'),
			' -m ',parameters('numberOfNodes') )]",
				

		"newVirtualNetworkName": "[concat('virtual-network-',parameters('clusterName'))]",
		"publicIPName": "[concat('public-ip-',parameters('clusterName'))]",
		"publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPName'))]",
		"NICipconfig": "ipCnfgBE",
		"NICRef": "[resourceId('Microsoft.Network/networkInterfaces',parameters('vmNICNamePattern'))]",
		"DNSNameLB": "[concat('mapr.com')]",
		"vnetRef": "[resourceId('Microsoft.Network/virtualNetworks',variables('newVirtualNetworkName'))]",
		"subnetBackEndRef": "[concat(variables('vnetRef'),'/subnets/private')]",
		"FrontEndRef": "[concat(variables('vnetRef'),'/subnets/public')]",				

		"storageAccountName": "[concat(resourceGroup().name,parameters('storageAccountName'))]",
		"storageRef": "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
	},


	"resources": [
		{
			"apiVersion": "2014-12-01-preview",
			"type": "Microsoft.Network/virtualNetworks",
			"name": "[variables('newVirtualNetworkName')]",
			"location": "[parameters('location')]",
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"10.0.0.0/16"
					]
				},
				"subnets": [
					{
						"name": "Public",
						"properties": {
							"addressPrefix": "10.0.1.0/24"
						}
					},
					{
						"name": "Private",
						"properties": {
							"addressPrefix": "10.0.2.0/24"
						}
					}
				]
			}
		},


		{
			"apiVersion": "2014-12-01-preview",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[parameters('clusterName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[variables('vnetRef')]"

			],
			"properties": {
				"publicIPAllocationMethod": "Static",
				"dnsSettings": {
					"domainNameLabel": "[variables('DNSNameLB')]"
				}
			}
		},


		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat(variables('storageAccountName'),copyIndex())]",
			"apiVersion": "2014-12-01-preview",
			"location": "[parameters('location')]",
			"copy": {
				"name": "StorageAccountsLoop",
				"count": "[parameters('numberOfNodes')]"
			},
			"properties": {
				"accountType": "[parameters('storageAccountType')]"
			}
		},

		
		{
			"apiVersion": "2014-12-01-preview",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat('mapr-nic-',copyIndex())]",
			"location": "[parameters('location')]",
			"copy": {
				"name": "NICSLoop",
				"count": "[parameters('numberOfNodes')]"
			},
			"dependsOn": [
				"[variables('vnetRef')]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "[variables('NICipconfig')]",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress": "[concat('10.0.2.2',copyindex())]",
							"subnet": {
								"id": "[variables('subnetBackEndRef')]"
							},
						}

					}
				]
			}
		},


		{
			"apiVersion": "2014-12-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(parameters('clusterName'),'-',copyIndex())]",
			"location": "[parameters('location')]",
			"tags": {
				"ServerRole": "[parameters('tags')]"
				},
			"copy": {
				"name": "NodessLoop",
				"count": "[parameters('numberOfNodes')]"
			},
			"dependsOn": [
				"[concat(variables('storageRef'),copyIndex())]",
				"[concat(variables('NICRef'),copyIndex())]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "Standard_A11"
				},
				"osProfile": {
					"computername": "[concat(parameters('clusterName'),copyIndex())]",
					"adminUsername": "mapr",
					"adminPassword": "[parameters('maprPassword')]",
					"linuxConfiguration": {
						"disablePasswordAuthentication": "false",
						"ssh": {
							"publicKeys": [
								{
									"path": "[variables('sshKeyPath')]",
									"keyData": "[parameters('sshKeyData')]"
								}
							]
						}
					}
				},
				"storageProfile": {
					"sourceImage": {
						"id": "[variables('vmSourceImageRef')]"
					},
					"destinationVhdsContainer": "[concat('http://',variables('storageAccountName'),copyIndex(),'.blob.core.windows.net/',parameters('vmStorageAccountContainerName'),'/')]",
					"dataDisks": [
						{
							"name": "[concat(parameters('clusterName'),copyIndex(), 'Data_1')]",
							"diskSizeGB": "[parameters('sizeOfDataDisks')]",
							"lun": 0,
							"vhd": {
								"Uri": "[concat('http://',variables('storageAccountName'),copyIndex(),'.blob.core.windows.net/',parameters('vmStorageAccountContainerName'),'/Data_1.vhd')]"
							}
						},
						{
							"name": "[concat(parameters('clusterName'),copyIndex(), 'Data_2')]",
							"diskSizeGB": "[parameters('sizeOfDataDisks')]",
							"lun": 1,
							"vhd": {
								"Uri": "[concat('http://',variables('storageAccountName'),copyIndex(),'.blob.core.windows.net/',parameters('vmStorageAccountContainerName'),'/Data_2.vhd')]"
							}
						},
						{
							"name": "[concat(parameters('clusterName'),copyIndex(), 'Data_3')]",
							"diskSizeGB": "[parameters('sizeOfDataDisks')]",
							"lun": 2,
							"vhd": {
								"Uri": "[concat('http://',variables('storageAccountName'),copyIndex(),'.blob.core.windows.net/',parameters('vmStorageAccountContainerName'),'/Data_3.vhd')]"
							}
						},
						{
							"name": "[concat(parameters('clusterName'),copyIndex(), 'Data_4')]",
							"diskSizeGB": "[parameters('sizeOfDataDisks')]",
							"lun": 3,
							"vhd": {
								"Uri": "[concat('http://',variables('storageAccountName'),copyIndex(),'.blob.core.windows.net/',parameters('vmStorageAccountContainerName'),'/Data_4.vhd')]"
							}
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[concat(variables('NICRef'),copyIndex())]"
						}
					]
				}
			}
		},


		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(parameters('clusterName'),copyIndex(),'/configuressh')]",
			"apiVersion": "2014-12-01-preview",
			"location": "[parameters('location')]",
			"copy": {
				"name": "VMExtensionsLoop",
				"count": "[parameters('numberOfNodes')]"
			},
			"dependsOn": [
				"VMsLoop"
			],
			"properties": {
				"publisher": "Microsoft.OSTCExtensions",
				"type": "CustomScriptForLinux",
				"typeHandlerVersion": "1.2",
				"settings": {
					"fileUris": [
						"[variables('bootstrapUrl')]"
					],
					"commandToExecute": "[variables('bootstrapCommand')]",

				}
			}
		},


		{
			"apiVersion": "2014-12-01-preview",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "NICAnsibleController",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[variables('vnetRef')]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "[variables('NICipconfig')]",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress": "[concat('10.0.2.2',parameters('numberOfNodes'))]",
							"subnet": {	"id": "[variables('subnetBackEndRef')]"}
						}

					}
				]
			}
		},

		
	],

	"outputs":
	{
		"sshResourceURL":{
				"value":"[concat('SSH Url to Ansible Controller:mapr@', reference(variables('publicIPRef'),providers('Microsoft.Network', 'publicIPAddresses').apiVersions[0]).dnsSettings.fqdn,' -p ',parameters('sshNatRuleFrontEndPort'))]",
				"type":"string"
		},
		"couchbaseWebURL":{
				"value":"[concat('URL To Couchbase Admin Console: https://', reference(variables('publicIPRef'),providers('Microsoft.Network', 'publicIPAddresses').apiVersions[0]).dnsSettings.fqdn,':8443')]",
				"type":"string"
		}
	}
}
